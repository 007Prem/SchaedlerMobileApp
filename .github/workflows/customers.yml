name: Customer Build
on:
  workflow_dispatch:
    inputs:
      release_env:
        description: 'Environment'
        required: true
        default: 'qa'
        type: choice
        options:
          - qa
          - beta
      test_group:
        description: 'Tester group'
        required: false
        default: 'none'
        type: choice
        options:
          - all
          - none
          - qa
          - customers
          - dummy
      custom_test_group:
        description: 'Custom Test Group (optional)'
        required: false

jobs:
  ios:
    runs-on: macos-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      - name: List
        run: |
          ls -l

      - name: Install Flutter
        id: flutter-action
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - run: flutter --version

      - run: flutter doctor -v

      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Fastlane
        run: |
          RELEASE_ENV='${{ github.event.inputs.release_env }}'
          
          if [ -n "${{ github.event.inputs.custom_test_group }}" ]; then
              TEST_GROUP="${{ github.event.inputs.custom_test_group }}"
          else
              TEST_GROUP="${{ github.event.inputs.test_group }}"
          fi

          echo "Using RELEASE_ENV: $RELEASE_ENV"
          echo "Using TEST_GROUP: $TEST_GROUP"
          
          if [ -z "$TEST_GROUP" ] || [ "$TEST_GROUP" == "none" ]; then
              fastlane ios "$RELEASE_ENV"
          else
              fastlane ios "$RELEASE_ENV" release:"$TEST_GROUP"
          fi
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
  android:    
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: List
        run: |
          ls -l

      - name: Set up Java
        uses: actions/setup-java@v4
        with: 
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'


      - name: Install Flutter
        id: flutter-action
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - run: flutter --version

      - run: flutter doctor -v

      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Fastlane
        run: |
          RELEASE_ENV='${{ github.event.inputs.release_env }}'
          
          if [ -n "${{ github.event.inputs.custom_test_group }}" ]; then
              TEST_GROUP="${{ github.event.inputs.custom_test_group }}"
          else
              TEST_GROUP="${{ github.event.inputs.test_group }}"
          fi

          echo "Using RELEASE_ENV: $RELEASE_ENV"
          echo "Using TEST_GROUP: $TEST_GROUP"
          
          if [ -z "$TEST_GROUP" ] || [ "$TEST_GROUP" == "none" ]; then
              fastlane android "$RELEASE_ENV"
          else
              fastlane android "$RELEASE_ENV" release:"$TEST_GROUP"
          fi
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}